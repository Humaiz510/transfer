i am trying to create a kettle pouring hjot chai into a cup animation for the duration of my loading screen on my website but everything is off. here is what the images look like and what my code looks like so far:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chai Cart</title>
    <link rel="icon" type="image/x-icon" href="images/logo.png">
    <link rel="stylesheet" href="styles.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">
</head>
<body>

    <!-- Loading Screen -->
    <div id="loading-screen">
        <div id="loading-animation">
            <img id="kettle" src="images/kettle.svg" alt="Kettle">
            <div id="chai-liquid"></div>
            <img id="cup" src="images/cup.svg" alt="Cup">
        </div>
        <div id="loading-container">
            <div id="loading-bar-placeholder"></div>
            <div id="loading-bar"></div>
            <div id="loading-counter">0%</div>
        </div>
    </div>

    <!-- Navigation -->
    <nav>
        <ul>
            <li><a href="#intro">Home</a></li>
            <li><a href="#gallery">Gallery</a></li>
            <li><a href="#contact">Contact</a></li>
        </ul>
    </nav>

    <!-- Main website container with rounded corners -->
    <div id="website-container">
        <!-- Intro Section -->
        <section id="intro" class="intro-section">
            <h1>Welcome to Chaska Chai Cart</h1>
            <p>We serve delightful chai at your eventsâ€”weddings, birthdays, and more!</p>
            <a href="#contact" class="book-btn">Book Us for Your Event</a>
        </section>

        <!-- Gallery Section -->
        <section id="gallery" class="gallery-section">
            <h2>Event Gallery</h2>
            <div class="gallery-container">
                <div class="gallery">
                    <img src="images/event1.jpg" alt="Event 1">
                    <img src="images/event2.jpg" alt="Event 2">
                    <img src="images/event3.jpg" alt="Event 3">
                    <img src="images/event4.jpg" alt="Event 4">
                    <img src="images/event5.jpg" alt="Event 5">
                    <img src="images/event6.jpg" alt="Event 6">
                    <img src="images/event7.jpg" alt="Event 7">
                    <img src="images/event8.jpg" alt="Event 8">
                    <img src="images/event9.jpg" alt="Event 9">
                    <img src="images/event10.jpg" alt="Event 10">
                </div>
            </div>
        </section>

        <!-- Contact Section -->
        <section id="contact" class="contact-section">
            <h2>Contact Us</h2>
            <form id="contact-form">
                <input type="text" placeholder="Your Name" required>
                <input type="email" placeholder="Your Email" required>
                <textarea placeholder="Your Message" required></textarea>
                <button type="submit">Send Message</button>
            </form>

            <!-- Embed Google Calendar Here -->
            <div id="calendar-container" style="margin-top: 40px;">
                <iframe src="https://calendar.google.com/calendar/embed?src=humaizakbar610%40gmail.com&ctz=America%2FNew_York" style="border: 0" width="800" height="600" frameborder="0" scrolling="no"></iframe>
            </div>
        </section>


        <!-- Socials Section -->
        <footer>
            <div class="socials">
                <a href="#" target="_blank"><img src="images/tiktok.svg" alt="Tiktok"></a>
                <a href="https://www.instagram.com/chaichaskacart/" target="_blank"><img src="images/instagram.svg" alt="Instagram"></a>
                <a href="#" target="_blank"><img src="images/twitter.svg" alt="Twitter"></a>
            </div>
            <p>&copy; 2024 Chai Cart | All rights reserved.</p>
        </footer>

        <!-- Modal for viewing full-sized images -->
        <div id="image-modal" style="display: none;">
            <span id="close-modal" style="position: absolute; top: 10px; right: 10px; font-size: 30px; cursor: pointer;">&times;</span>
            <img id="modal-image" style="max-width: 90%; max-height: 90%; border-radius: 10px;" />
        </div>

        <!-- JavaScript -->
        <script src="script.js"></script>
        <script>
            // Modal functionality for enlarging images
            const galleryImages = document.querySelectorAll('.gallery img');
            const modal = document.getElementById('image-modal');
            const modalImage = document.getElementById('modal-image');
            const closeModal = document.getElementById('close-modal');

            galleryImages.forEach((img) => {
                img.addEventListener('click', function() {
                    modal.style.display = 'flex';
                    modalImage.src = this.src;
                });
            });

            closeModal.addEventListener('click', function() {
                modal.style.display = 'none';
            });

            window.addEventListener('click', function(event) {
                if (event.target == modal) {
                    modal.style.display = 'none';
                }
            });

            // Horizontal swipe and drag functionality
            const galleryContainer = document.querySelector('.gallery-container');
            let isMouseDown = false;
            let startX;
            let scrollLeft;

            // Disable image dragging to prevent conflict with gallery scrolling
            galleryImages.forEach((img) => {
                img.addEventListener('dragstart', (e) => e.preventDefault());
            });

            // Desktop drag functionality
            galleryContainer.addEventListener('mousedown', (e) => {
                isMouseDown = true;
                startX = e.pageX - galleryContainer.offsetLeft;
                scrollLeft = galleryContainer.scrollLeft;
                galleryContainer.style.cursor = 'grabbing';
            });

            galleryContainer.addEventListener('mouseleave', () => {
                isMouseDown = false;
                galleryContainer.style.cursor = 'grab';
            });

            galleryContainer.addEventListener('mouseup', () => {
                isMouseDown = false;
                galleryContainer.style.cursor = 'grab';
            });

            galleryContainer.addEventListener('mousemove', (e) => {
                if (!isMouseDown) return;
                e.preventDefault();
                const x = e.pageX - galleryContainer.offsetLeft;
                const walk = (x - startX) * 2; // Adjust scrolling speed
                galleryContainer.scrollLeft = scrollLeft - walk;
            });

            // For Mobile: Implementing swipe functionality
            let isTouchStart = false;
            let startTouchX;

            galleryContainer.addEventListener('touchstart', (e) => {
                isTouchStart = true;
                startTouchX = e.touches[0].pageX;
                scrollLeft = galleryContainer.scrollLeft;
            });

            galleryContainer.addEventListener('touchmove', (e) => {
                if (!isTouchStart) return;
                const touchX = e.touches[0].pageX;
                const move = (touchX - startTouchX) * 2; // Adjust swipe speed
                galleryContainer.scrollLeft = scrollLeft - move;
            });

            galleryContainer.addEventListener('touchend', () => {
                isTouchStart = false;
            });
        </script>
    </div>
</body>
</html>

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Allow vertical scrolling in the body */
body {
    background-color: black;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow: hidden; /* Allow vertical scrolling */
}

/* Main container with rounded corners */
#website-container {
    width: 98%; /* Make the container take up 98% of the viewport width */
    max-width: 1950px; /* Increase the maximum width further */
    height: 95vh; /* Increase the height to fill 90% of the viewport height */
    background-color: white; /* White background inside the container */
    border-radius: 20px; /* Keep the rounded corners */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* Optional shadow for floating effect */
    overflow-y: auto; /* Enable vertical scrolling inside the container */
    position: relative; /* Allow elements inside to be positioned relatively */
    margin: 1vh auto; /* Add minimal vertical margin to keep a small space on top and bottom */
}

#website-container::-webkit-scrollbar {
    display: none; /* For Chrome, Safari, and Opera */
}

section {
    padding-top: 100px; /* Adjust according to nav height */
}

/* Loading Screen */
#loading-screen {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: white; /* Background color for the loading screen */
    z-index: 9999; /* Ensure it appears above all other elements */
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Loading Bar Container */
#loading-container {
    position: relative;
    width: 250px; /* Width of the loading bar placeholder */
    display: flex;
    align-items: center;
    gap: 10px;
    justify-content: flex-start; /* Ensure bar grows from left */
}

/* Placeholder Line */
#loading-bar-placeholder {
    position: absolute;
    top: 50%;
    left: 0;
    width: 100%; /* The full width of the placeholder */
    height: 2px; /* Thin placeholder line */
    background-color: #ccc; /* Placeholder color */
    z-index: 1;
}

/* The Loading Bar */
#loading-bar {
    position: absolute;
    top: 50%;
    left: 0;
    width: 0%; /* Start at 0% */
    height: 2px; /* Thin line */
    background-color: #ff6f61; /* Color for the loading bar */
    z-index: 2; /* Ensure it appears on top of the placeholder */
    transition: width .5s ease-in-out; /* Make the bar fill in 3 seconds */
}

/* Percentage Counter */
#loading-counter {
    font-family: 'Open Sans', sans-serif;
    font-size: 0.9rem; /* Smaller text for the counter */
    color: #333;
    position: relative;
    margin-left: 255px; /* Align the counter just outside the bar */
    z-index: 3;
}

/* Fade-out animation for the loading screen */
.fade-out {
    opacity: 0;
    transition: opacity 1s ease;
    pointer-events: none;
}

/* Kettle and Cup Styles */
#loading-animation {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    margin-bottom: 20px;
}

#kettle {
    width: 100px;
    animation: tiltKettle 5s ease-in-out forwards;
}

#cup {
    width: 80px;
    margin-top: 20px;
}

/* Chai Liquid */
#chai-liquid {
    position: absolute;
    top: 60px; /* Adjust depending on kettle position */
    width: 8px;
    height: 0;
    background-color: #c08e56;
    animation: pourChai 5s ease-in-out forwards;
}

/* Kettle tilting animation */
@keyframes tiltKettle {
    0% {
        transform: rotate(0deg);
    }
    50% {
        transform: rotate(20deg);
    }
    100% {
        transform: rotate(0deg);
    }
}

/* Pouring Chai animation */
@keyframes pourChai {
    0% {
        height: 0;
    }
    50% {
        height: 80px;
    }
    100% {
        height: 0;
    }
}


/* Vertical Navigation Bar */
nav {
    position: fixed;
    top: 50%;
    left: 20px; /* Distance from the left edge */
    transform: translateY(-50%);
    z-index: 1000;
    display: flex;
    flex-direction: column;
    gap: 15px;
    align-items: center;
}

/* Navigation links and styles */
nav ul {
    display: flex;
    flex-direction: column;
    gap: 15px;
    list-style: none;
    margin: 0;
    padding: 0;
    align-items: center;
}

nav ul li {
    position: relative;
}

nav ul li a {
    text-decoration: none;
    color: white; /* Make the text color white */
    font-size: 0.8rem; /* Make the font size smaller */
    padding: 3px 0;
    display: inline-block;
    text-transform: uppercase;
    text-align: center;
}

/* White dot under the active section */
nav ul li.active::after {
    content: '';
    position: absolute;
    bottom: -10px; /* Position the dot below the link */
    left: 50%;
    transform: translateX(-50%);
    width: 6px;
    height: 6px;
    background-color: white; /* White dot */
    border-radius: 50%;
}

.intro-section {
    height: 100vh;
    background: url('images/background.jpg') no-repeat center center;
    background-size: cover;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: white;
}

.intro-section h1 {
    font-size: 4rem;
    margin-bottom: 20px;
    color: black;
}

.intro-section p {
    font-size: 1.5rem;
    margin-bottom: 40px;
    color: black;
}

.book-btn {
    padding: 10px 20px;
    background-color: #ff6f61;
    color: white;
    text-decoration: none;
    border-radius: 20px;
    transition: background 0.3s;
}

.book-btn:hover {
    background-color: #e65c50;
}

/* Media Query: Hide the navigation on small screens */
@media (max-width: 768px) {
    nav {
        display: none; /* Hide nav */
    }

    #website-container {
        width: 90%; /* Take up full width on mobile */
        padding: 0; /* Remove padding */
    }

    /* Adjust other elements on mobile */
    .intro-section h1 {
        font-size: 2rem; /* Smaller headings */
    }

    .intro-section p {
        font-size: 1rem; /* Smaller paragraph */
    }

    .book-btn {
        font-size: 0.9rem; /* Adjust button size */
        padding: 8px 16px; /* Adjust button padding */
    }

    .intro-section {
        background-size: fill; /* Ensure background fits nicely */
    }
}

.gallery-section {
    padding: 100px 0;
    background: #f4f4f4;
    text-align: center;
}

/* Updated styles for gallery container to allow horizontal scrolling */
.gallery-container {
    display: flex;
    justify-content: center;
    overflow-x: scroll;
    overflow-y: hidden;
    scroll-behavior: smooth;
    width: 100%;
    cursor: grab; /* Cursor for grabbing on PC */
}

/* Style to enlarge image and push surrounding images on hover */
.gallery img {
    width: 300px;
    height: 200px;
    object-fit: cover;
    border-radius: 10px;
    transition: transform 0.3s ease, margin 0.3s ease;
}

.gallery img:hover {
    transform: scale(1.1); /* Enlarge the image */
}

/* Hide scrollbar */
.gallery-container::-webkit-scrollbar {
    display: none;
}

/* Make the container scroll smoothly */
.gallery {
    display: flex;
    gap: 20px;
    padding: 10px;
}

/* Style for the modal */
#image-modal {
    display: flex;
    justify-content: center;
    align-items: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 9999;
}

#modal-image {
    transition: transform 0.3s ease-in-out;
}

#image-modal #close-modal {
    color: white;
    position: fixed;
    right: 20px;
    top: 20px;
    font-size: 2rem;
    cursor: pointer;
}

.contact-section {
    padding: 100px 20px;
    background-color: #fefefe;
    text-align: center;
}

.contact-section h2 {
    font-size: 2.5rem;
    margin-bottom: 40px;
}

#contact-form {
    display: flex;
    flex-direction: column;
    gap: 20px;
    max-width: 600px;
    margin: 0 auto;
}

#contact-form input, #contact-form textarea {
    padding: 15px;
    border: 1px solid #ccc;
    border-radius: 10px;
}

#contact-form button {
    padding: 15px;
    background-color: #ff6f61;
    color: white;
    border: none;
    border-radius: 20px;
    cursor: pointer;
}

#contact-form button:hover {
    background-color: #e65c50;
}

footer {
    background: #333;
    color: white;
    padding: 40px 0;
    text-align: center;
    width: calc(100% + 40px); /* Extend the footer to cover the full width of the container */
    margin-left: -20px; /* Shift the footer left by 20px to align it with the container edges */
    border-bottom-left-radius: 20px; /* Match container's bottom-left corner rounding */
    border-bottom-right-radius: 20px; /* Match container's bottom-right corner rounding */
}

.socials {
    margin-bottom: 20px;
}

.socials a {
    margin: 0 15px;
}

.socials img {
    width: 30px;
    transition: transform 0.3s ease;
}

.socials img:hover {
    transform: scale(1.2);
}



// Custom smooth scroll function with adjustable duration
function smoothScrollTo(container, targetPosition, duration) {
    const startPosition = container.scrollTop;
    const distance = targetPosition - startPosition;
    let startTime = null;

    function animation(currentTime) {
        if (startTime === null) startTime = currentTime;
        const timeElapsed = currentTime - startTime;
        const run = easeInOutQuad(timeElapsed, startPosition, distance, duration);

        container.scrollTop = run;

        if (timeElapsed < duration) requestAnimationFrame(animation);
    }

    function easeInOutQuad(t, b, c, d) {
        t /= d / 2;
        if (t < 1) return c / 2 * t * t + b;
        t--;
        return -c / 2 * (t * (t - 2) - 1) + b;
    }

    requestAnimationFrame(animation);
}

// Scroll to the target section when clicking a nav link with slower smooth scrolling
document.querySelectorAll('nav a').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();

        const targetId = this.getAttribute('href').substring(1); // Get the target section ID
        const targetElement = document.querySelector(`#${targetId}`);
        const targetPosition = targetElement.offsetTop - container.offsetTop; // Calculate the target position relative to the container
        
        smoothScrollTo(container, targetPosition, 2000); // Use custom smooth scroll with 2s duration
    });
});

// Add active class to the correct nav item based on scroll position
const sections = document.querySelectorAll('section');
const navLinks = document.querySelectorAll('nav ul li');
const container = document.getElementById('website-container');

// Function to add active class on page load for Home section
function setInitialActiveLink() {
    navLinks.forEach((li, index) => {
        li.classList.remove('active');
        if (index === 0) {
            li.classList.add('active'); // Set Home as active initially
        }
    });
}

// Function to update the active link on scroll
function updateActiveLinkOnScroll() {
    let current = '';

    sections.forEach(section => {
        const sectionTop = section.offsetTop - container.offsetTop; // Calculate the top of the section relative to the container
        const sectionHeight = section.clientHeight;
        const scrollPosition = container.scrollTop; // Get scroll position of the container

        if (scrollPosition >= sectionTop - sectionHeight / 3) {
            current = section.getAttribute('id');
        }
    });

    navLinks.forEach(li => {
        li.classList.remove('active');
        if (li.querySelector('a').getAttribute('href').includes(current)) {
            li.classList.add('active');
        }
    });

    // Special case for the last section (Contact), when scrolled to the bottom
    if (container.scrollTop + container.clientHeight >= container.scrollHeight) {
        navLinks.forEach(li => {
            li.classList.remove('active');
            if (li.querySelector('a').getAttribute('href').includes('contact')) {
                li.classList.add('active');
            }
        });
    }
}

// Set initial active link on page load
setInitialActiveLink();

// Update active link on scroll (within the container)
container.addEventListener('scroll', updateActiveLinkOnScroll);


window.addEventListener('load', function() {
    const loadingScreen = document.getElementById('loading-screen');
    const loadingBar = document.getElementById('loading-bar');
    const loadingCounter = document.getElementById('loading-counter');

    let percentage = 0;

    // Update the loading bar width and counter every 50ms
    const interval = setInterval(() => {
        percentage += 2; // Increment the percentage value
        loadingBar.style.width = `${percentage}%`; // Increase width in percentage
        loadingCounter.textContent = `${percentage}%`; // Update the counter text

        // Once the percentage reaches 100%, stop the interval
        if (percentage >= 100) {
            clearInterval(interval);

            // After loading completes, fade out the loading screen
            setTimeout(() => {
                loadingScreen.classList.add('fade-out');

                // Remove the loading screen from the DOM after the fade-out
                setTimeout(() => {
                    loadingScreen.style.display = 'none';
                }, 1000); // Wait for 1 second for the fade-out to finish
            }, 600); // Add a slight delay to synchronize the animation
        }
    }, 50); // Update every 50 milliseconds, so it reaches 100% in 5 seconds
});

